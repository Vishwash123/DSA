#include <bits/stdc++.h>
using namespace std;
int main() {
    int n;
    cin>>n;
    vector<vector<int>> edges(n);

    vector<vector<int>> distance(n,vector<int>(n,INT_MAX));//like an adj matrix
    for (auto x:edges)
    {
        int u = x[0];
        int v = x[1];
        int w = x[2];

        distance[u][v] = w;
        //distance[v][u] = w; //if undirected
    }

    for (int i=0;i<n;i++)
    {
        for (int j=0;j<n;j++)
        {
            if(i==j)
            {
                distance[i][j] = 0;
            }
        }
    }

    for (int via = 0;via<n;via++)
    {
        for (int i=0;i<n;i++)
        {
            for (int j=0;j<n;j++)
            {
                distance[i][j] = min(distance[i][j],distance[i][via] + distance[via][j]);
            }
        }
    }

    //now distance will have the shortest distance between every pair of vertices like distance[0][1] contains shortest distance
    //between 0 and 1

    //we can check for negative cycles because distance from a node to itself should be 0 but if it gets updated that means their is a
    //negative cycle
}
