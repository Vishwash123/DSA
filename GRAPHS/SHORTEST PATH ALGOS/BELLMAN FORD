#include <bits/stdc++.h>
using namespace std;
int main() {
    //doesnt work with negative cycle
    int n;
    cin>>n;
    vector<vector<int>> edges;
    int source;
    cin>>source;

    vector<int> distance(n,INT_MAX);
    distance[source] = 0;

    //check and update distances n-1 times
    for (int i=0;i<n-1;i++)
    {
        for (auto x:edges)
        {
            if(distance[x[0]]!=INT_MAX && distance[x[0]]  +x[2] < distance[x[1]])
            {
                distance[x[1]] =  distance[x[0]]  +x[2];
            }
        }
    }

    for (auto x:edges)
    {
        if(distance[x[0]]!=INT_MAX && distance[x[0]]  +x[2] < distance[x[1]])
        {
           cout<<"-ve cycle present so wont work"<<endl;
        }
    }
    cout<<"Done"<<endl;
    for (auto x:distance)
    {
        cout<<x<<" ";
    }


}
